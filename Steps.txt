- Create Platform Service with Service Ops (GetPlatforms, GetPlatformById, CreatePlatform)
- Test Platform Service Ops in Postman
- Create Docker File and run docker for Platform Service
- Test Platform Service Ops in Postman for Docker
- Create Kubernate deployment file for Platform Service
- Create kubernate node service deployment file for Platform Service
- Test Platform Service Ops in Postman for Kubernetes
- Create CommandService with Service Ops
- Test Service Ops in Postman
- Update Platform Service to support messaging (SyncDataServices)
    -- Create Interface and Service for HttpClient
    -- Add services.AddHttpClient<ICommandDataClient, HttpCommandDataClient>(); in startup
    -- Update PlatformController to support messaging
- Create Docker File and run docker for Command Service
- Update platforms-depl.yaml file to support cluster IP
- Create new appsettings.production.json in platform service and update command service entry point from k8s ClusterIP name
    -- Build platform service docker and push it
    -- Redeploy platform service again in kubernate
    -- Restart exisitng deployments in kubernate
    -- Apply command service deployments in k8s